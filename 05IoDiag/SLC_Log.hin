#pragma region comparison_of_SLC_<NTID>_t_numbers
#define SLC_<NTID>_abssum2(__a, __b) (SLC_<NTID>_abs(__a) + SLC_<NTID>_abs(__b))
#define SLC_<NTID>_absdiff(__a, __b) SLC_<NTID>_abs((__a) - (__b))
#define SLC_<NTID>_relabsdiff(__a, __b) SLC_<NTID>_absdiff(__a, __b)/SLC_<NTID>_abssum2(__a, __b)
#define SLC_<NTID>_areequal(__a, __b, __tol) \
    (((SLC_<NTID>_abs(__a) < __tol) || (SLC_<NTID>_abs(__b) < __tol)) ? \
    (SLC_<NTID>_absdiff(__a, __b) < __tol) : (SLC_<NTID>_relabsdiff(__a, __b) < __tol))
#define SLC_Pnt<NTID>_areequal(__p0, __p1, __tol) ( \
    SLC_<NTID>_areequal((__p0)[0]/(__p0)[3], (__p1)[0]/(__p1)[3], __tol) && \
    SLC_<NTID>_areequal((__p0)[1]/(__p0)[3], (__p1)[1]/(__p1)[3], __tol) && \
    SLC_<NTID>_areequal((__p0)[2]/(__p0)[3], (__p1)[2]/(__p1)[3], __tol))
#pragma endregion